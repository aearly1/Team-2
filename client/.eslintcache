[{"/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/App.js":"1","/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/pages/general/Home.js":"2","/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/pages/DiabPages/HODCourseStaff.js":"3","/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/pages/general/About.js":"4","/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/pages/DiabPages/HODAssignInstr.js":"5","/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/pages/DiabPages/HODStaffDO.js":"6","/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/pages/DiabPages/HODCourseCov.js":"7","/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/pages/DiabPages/HODStaffDOS.js":"8","/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/layout/SidebarMain.js":"9","/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/pages/DiabPages/HODViewStaff.js":"10"},{"size":3503,"mtime":1610042656697,"results":"11","hashOfConfig":"12"},{"size":177,"mtime":1610042656571,"results":"13","hashOfConfig":"12"},{"size":1462,"mtime":1610042656694,"results":"14","hashOfConfig":"12"},{"size":972,"mtime":1610042656676,"results":"15","hashOfConfig":"12"},{"size":6423,"mtime":1610042656695,"results":"16","hashOfConfig":"12"},{"size":2348,"mtime":1610042656693,"results":"17","hashOfConfig":"12"},{"size":1466,"mtime":1610042656695,"results":"18","hashOfConfig":"12"},{"size":2999,"mtime":1610042656692,"results":"19","hashOfConfig":"12"},{"size":3211,"mtime":1610042656696,"results":"20","hashOfConfig":"12"},{"size":3790,"mtime":1610042656691,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1w6k4k",{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"27"},"/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/App.js",["51","52"],"/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/pages/general/Home.js",["53","54","55","56","57"],"import React from 'react'\nimport {Row, Col, Container, Button , Card} from 'react-bootstrap'\nconst Home = () => {\n    return (\n        <h1>Home</h1>\n    )\n}\n\nexport default Home",["58","59"],"/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/pages/DiabPages/HODCourseStaff.js",["60","61","62","63","64","65","66"],"import React, {useState} from 'react';\nimport {Container, Button,Card , Col, Row,Form, Dropdown,ButtonGroup, DropdownButton} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nconst StaffCard = styled.div`\n  .staffCard{\n    width: auto;\n    box-shadow: 10px 5px;\n  }\n`;\n\n\nfunction HODCourseStaff(props) {   \n\n  const [value1,setValue1]= useState('');\n  const handleSelect1=(e)=>{\n    setValue1(e)\n  }\n  return (\n      <Container fluid >\n      <Form>\n          <Form.Group controlId=\"formCourse\">\n          <Form.Label><h1>  Select a course to view its staff members:</h1></Form.Label>\n          <div style = {{whiteSpace: 'nowrap', paddingLeft:10, marginLeft:0}}>\n          <Dropdown as={ButtonGroup} style= {{paddingLeft:30}}>\n          <Dropdown.Toggle variant=\"warning\"> {(value1===\"\")?\"Select Course\":value1} </Dropdown.Toggle>\n          <Dropdown.Menu >\n          {props.courses.map(course => {\n              //TODO: Need to set this bit to put the course in the payload to the view staff page\n              return <Dropdown.Item href=\"/view-staff\">{course}</Dropdown.Item>\n          }\n      )}\n      </Dropdown.Menu>\n      </Dropdown>\n      </div>\n      </Form.Group>\n      </Form>\n      </Container>\n  )\n}\nHODCourseStaff.propTypes = {\n    courses: PropTypes.string\n  }\n  \n  HODCourseStaff.defaultProps = {\n    courses: [\"Course 1\",\"Course 2\",\"Course 3\" , \"Course 4\"],\n  };\n  \nexport default HODCourseStaff\n","/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/pages/general/About.js",["67"],"import React from 'react'\nimport {Container} from 'react-bootstrap'\nconst About = () => {\n    return (\n        <div style={{textAlign:\"center\"}}>\n            <h1>About This App:</h1>\n            <p className=\"my-1\">\n                This is a MERN-stack App created for GUC Advanced Computer Lab Course Project, \n                Created by Team 2.\n            </p>\n            <p style ={{paddingTop:30}}>\n                <strong style = {{fontSize:22}}>Contributing Team 2 Members: </strong>\n                 \n                    <ul style={{listStyleType:\"none\"}}>\n                        <li>{\"Abdelrahman Diab  --  43-11809\"}</li>\n                        <li>{\"Ali Elbadry  --  43-6833\"}</li>\n                        <li>{\"Mayaaaaaar  --  43-6645\"}</li>\n                        <li>{\"Mostafa Sohob  --  43-8530\"}</li>\n                        <li>{\"Saeed Ashraf  --  43-8342\"}</li>\n                    </ul>\n            </p>\n        </div>\n    )\n}\n\nexport default About ","/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/pages/DiabPages/HODAssignInstr.js",["68","69","70","71","72","73","74"],"import React , {useState, useEffect} from 'react'\nimport {Container,Alert, Button, Form, Dropdown, DropdownButton, Tooltip, OverlayTrigger } from 'react-bootstrap'\nimport PropTypes from 'prop-types';\nimport useToken from '../general/useToken';\nimport axios from 'axios'\n\n\n/*\nTODOS ==>\n    1. Load Courses from DB\n        1.1 -> need to make a route to get courses\n    2. Load Instructors from DB\n        2.1 -> Load staff members then filter the instructors\n    3. \n*/\n\nfunction HODEditCourse(){\n    const token = useToken().token\n\n    const [options1,setOptions1]= useState([]);// Load Course Dropdown\n    const [options2,setOptions2]= useState([]);// Load Instructor Dropdown\n    const [alertext,setAlertext]= useState();\n    const [value1,setValue1]= useState(''); // This is the course\n    const [value2,setValue2]= useState(''); // This is the instructor\n    useEffect(async ()=>{\n        //GET THE Courses under department\n        await axios.get('http://localhost:5000/api/hod/courses',{headers:{'auth-token':token}}).then((res)=>{\n            alert(JSON.stringify(res.data))\n            let items = []\n            res.data.map(course => {items.push({ courseName:course.courseName})})\n            setOptions1(items);\n        }).catch(err=>alert(err))\n\n        //GET THE Instructors under department\n        await axios.get('http://localhost:5000/api/hod/staff',{headers:{'auth-token':token}}).then((res)=>{\n            alert(JSON.stringify(res.data))\n            let items = []\n            res.data.map(staffMem => \n            {\n            if((staffMem.subType=='head of department')||(staffMem.subType=='instructor')){\n                items.push({instrId:staffMem.userCode, name:staffMem.name})\n            }\n            })\n            setOptions2(items);\n        }).catch(err=>alert(err))\n\n        }, []  )\n\n    const assignInstrReq= ()=> {\n        if(value1&&value2){\n        axios.get('http://localhost:5000/api/hod/assign-instr-course',{courseName:value1,instructorId: value2},{headers:{'auth-token':token}}).then((res)=>{\n            setAlertext(res.data);         \n            }).catch(err=>alert(err))\n        }\n        else{\n            setAlertext(\"Either an Instructor or a course was not chosen.\")\n        }\n    }\n    const deleteInstrReq= () => {\n        if(value1&&value2){\n        axios.get('http://localhost:5000/api/hod/del-instr-course',{courseName:value1,instructorId: value2},{headers:{'auth-token':token}}).then((res)=>{\n            setAlertext(res.data);      \n            }).catch(err=>alert(err))\n        }\n        else{\n            setAlertext(\"Either an Instructor or a course was not chosen.\")\n        }\n    }\n    const updateInstrReq= () => {\n        if(value1&&value2){\n        axios.get('http://localhost:5000/api/hod/update-instr-course',{courseName:value1,instructorId: value1},{headers:{'auth-token':token}}).then((res)=>{\n            setAlertext(res.data);       \n            }).catch(err=>alert(err))\n        }\n        else{\n            setAlertext(\"Either an Instructor or a course was not chosen.\")\n        }\n    }\n\n\n\n    const handleSelect1=(e)=>{\n      setValue1(e)\n    }\n    const handleSelect2=(e)=>{\n        setValue2(e)\n      }\n    const renderTooltip1 = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n        The chosen <strong> instructor </strong> will be <strong> assigned</strong>  to the chosen <strong> course</strong>.\n    </Tooltip>\n    );\n    const renderTooltip2 = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n        The chosen <strong> instructor</strong>  will <strong> overwrite</strong>  all other instructors for the chosen <strong> course</strong>.\n    </Tooltip>\n    );\n    const renderTooltip3 = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n        The chosen <strong> instructor</strong>  will be <strong> un-assigned </strong> from the chosen <strong> course</strong>.\n    </Tooltip>\n    );\n    return (\n    <Container fluid>\n        <Form>\n            <Form.Group controlId=\"formCourse\">\n                <Form.Label>Course:</Form.Label>\n                <DropdownButton variant=\"warning\" onSelect={handleSelect1} id=\"dropdown-basic-button\" title={(value1===\"\")?\"Select Course\":value1}>\n                  {options1.map(option => {\n                      return <Dropdown.Item eventKey={option.courseName}>{option.courseName}</Dropdown.Item>\n                  }\n                  )}\n                </DropdownButton>\n            </Form.Group>\n\n            <Form.Group controlId=\"formInstructor\">\n                <Form.Label>Instructor:</Form.Label>\n                <DropdownButton variant=\"warning\" onSelect={handleSelect2} id=\"dropdown-basic-button\" title={(value2===\"\")?\"Select Instructor\":value2}>\n                {options2.map(option => {\n                      return <Dropdown.Item eventKey={option.instrId}>{option.name}</Dropdown.Item>\n                  }\n                  )}\n                </DropdownButton>\n            </Form.Group>\n\n            \n            {(alertext)?(<Alert variant ='warning'>{alertext}</Alert>):(<div></div>)}\n            <div style = {{paddingTop: 20}}>\n                <hr  style={{\n                    color: '#0C0A3E',\n                    backgroundColor: '#0C0A3E',\n                    height: 1,\n                    borderColor : '#0C0A3E'\n                }}/>\n                <OverlayTrigger\n                    placement=\"bottom\"\n                    delay={{ show: 250, hide: 400 }}\n                    overlay={renderTooltip1}\n                >\n                    <Button variant=\"success\" onClick={assignInstrReq} >Assign </Button>\n                </OverlayTrigger>\n                                \n                {' '}\n                    <OverlayTrigger\n                    placement=\"bottom\"\n                    delay={{ show: 250, hide: 400 }}\n                    overlay={renderTooltip2}\n                >\n                    <Button variant=\"info\" onClick={deleteInstrReq} >Update </Button>\n                </OverlayTrigger>\n                \n                {' '}\n                <OverlayTrigger\n                    placement=\"bottom\"\n                    delay={{ show: 250, hide: 400 }}\n                    overlay={renderTooltip3}\n                >\n                    <Button variant=\"danger\" onClick={updateInstrReq} >Delete </Button>\n                </OverlayTrigger>\n            </div>\n        </Form>\n    </Container>\n    )\n}\n\nexport default HODEditCourse\n","/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/pages/DiabPages/HODStaffDO.js",["75","76","77","78","79"],"import React, {useState} from 'react';\nimport {Container, Form, Card} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport styled from 'styled-components'\nconst StaffCard = styled.div`\n  .staffCard{\n    width: 100%;\n    box-shadow: 10px 5px;\n  }\n`;\n\nconst options = [\n  { value: 'Slim', label: 'Slim' },\n  { value: 'hassan', label: 'Hassan' },\n  { value: 'milad', label: 'Milad' },\n  { value: 'ahmed', label: 'Ahmed' } \n];\n\nfunction HODStaffDO(props) {  \nlet style1 = {\n  background:\"linear-gradient(purple, transparent),linear-gradient(to top left, #2C2A8A, transparent),linear-gradient(to top right, #F9564F, transparent)\",\n  backgroundColor:\"#0C0A4A\" ,\n  color: \"white\" ,\n  borderRadius: 10, \n  boxShadow: \"5px 10px 5px #9E9E9E\",\n  minWidth:750,\n};\n\n\nconst [rendered,setRendered]= useState(false);\nconst handleChange=(e)=>{\n  setRendered(true)\n}\n\nreturn (\n    <Container fluid >\n    <h1>Staff Member Day Offs:</h1>\n    {props.staff.map(staffMem => {\n        return (\n        <StaffCard style ={{paddingTop:20 }} >\n            <Card style={style1} >\n                <Card.Body >\n                <Card.Title style ={{fontSize: 30, textDecoration:\"underline\", textDecorationColor: \"#B33F62\"}}>{staffMem.staffMemberName} - Needs routing!!!</Card.Title>\n                <Card.Text>\n                id: {staffMem.id}\n                </Card.Text>\n                <Card.Text>\n                day-off: {staffMem.dayOff}\n                </Card.Text>\n                <Card.Text>\n                type: {staffMem.subType}\n                </Card.Text>\n                </Card.Body>\n            </Card>\n        </StaffCard>\n        )\n    })}\n    </Container>\n    )\n}\n\nHODStaffDO.propTypes = {\n    staff: PropTypes.object,\n    staffMembers: PropTypes.string\n  }\n  \nHODStaffDO.defaultProps = {\n    staff: [\n        {\n            id: \"ac-1\",\n            staffMemberName: \"Slim Abdennadher\",\n            subType: \"head of department\",\n            dayOff: \"SUN\",\n        },\n        {\n            id: \"ac-2\",\n            staffMemberName: \"Hassan Soubra\",\n            subType: \"instructor\",\n            dayOff: \"SAT\"\n        },\n        {\n            id: \"ac-3\",\n            staffMemberName: \"Mervat Abuelkheir\",\n            subType: \"instructor\",\n            dayOff: \"SAT\",\n        }]\n  };\n  \nexport default HODStaffDO\n","/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/pages/DiabPages/HODCourseCov.js",[],"/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/pages/DiabPages/HODStaffDOS.js",["80","81","82","83","84"],"import React, {useState, useEffect} from 'react';\nimport {Container, Form, Card, Dropdown, DropdownButton} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport useToken from '../general/useToken';\nimport axios from 'axios'\n\nconst StaffCard = styled.div`\n  .staffCard{\n    width: 100%;\n    box-shadow: 10px 5px;\n  }\n`;\n\nfunction HODStaffDOS() {  \n  const token = useToken().token\n\n  let style1 = {\n    background:\"linear-gradient(purple, transparent),linear-gradient(to top left, #2C2A8A, transparent),linear-gradient(to top right, #F9564F, transparent)\",\n    backgroundColor:\"#0C0A4A\" ,\n    color: \"white\" ,\n    borderRadius: 10, \n    boxShadow: \"5px 10px 5px #9E9E9E\",\n    minWidth:750,\n  };\n  const [options,setOptions]= useState([]);    \n  const [mem,setMem]= useState({});\n  const [rendered,setRendered]= useState(false);\n  const [value1, setValue1] = useState('');\n  useEffect(async ()=>{\n    await axios.get('http://localhost:5000/api/hod/staff',{headers:{'auth-token':token}}).then((res)=>{\n        let items = []\n        res.data.map(staffMem =>{items.push({value:staffMem.userCode, name:staffMem.name})})\n        setOptions(items);\n    }).catch(err=>alert(err))\n    }, []  )\n\n  const handleChange=(e)=>{\n    axios.post('http://localhost:5000/api/hod/staff-dos',{'staffId':e},{headers:{'auth-token':token}}).then((res)=>{ \n    setMem(res.data)  \n    }).catch(err=>alert(err))\n\n    setRendered(true)\n  }\n\n\n  return (\n      <Container fluid >\n        <h1>  Select a staff member to view his day off:</h1>\n        <div style = {{whiteSpace: 'nowrap', paddingLeft:0, marginLeft:0}}>\n        <DropdownButton variant=\"warning\" onSelect={handleChange} id=\"dropdown-basic-button\" title={(value1===\"\")?\"Select Course\":value1}>\n          {options.map(option => {\n              return <Dropdown.Item eventKey={option.value}>{option.name}</Dropdown.Item>\n          }\n          )}\n        </DropdownButton>\n        </div>\n          {(rendered?(\n          <StaffCard style ={{paddingTop:20 }} >\n            {/*Need to hange info here to axios get request*/}\n          <Card style={style1} >\n            <Card.Body >\n            <Card.Title style ={{fontSize: 30, textDecoration:\"underline\", textDecorationColor: \"#B33F62\"}}>{mem.staffMemberName} - Needs routing!!!</Card.Title>\n            <Card.Text>\n            id: {mem.id}\n            </Card.Text>\n            <Card.Text>\n            day-off: {mem.dayOff}\n            </Card.Text>\n            <Card.Text>\n            type: {mem.subType}\n            </Card.Text>\n            </Card.Body>\n          </Card>\n          </StaffCard>\n          ):(<div></div>))}\n      </Container>\n    )\n}\n  HODStaffDOS.propTypes = {\n    staff: PropTypes.object,\n    staffMembers: PropTypes.string\n  }\n  \n  HODStaffDOS.defaultProps = \n        {\n       staff: { \n        id: \"ac-2\",\n        staffMemberName: \"Hassan Soubra\",\n        subType: \"instructor\",\n        dayOff: \"SAT\"\n      }\n  };\n  \nexport default HODStaffDOS\n","/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/layout/SidebarMain.js",["85"],"import React, {useState} from 'react'\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Nav, Navbar} from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport SubMenu from './SubMenu';\nimport {SidebarData} from './SidebarData'\n\n\nimport * as FAIcons from 'react-icons/fa'\nimport * as AiIcons from 'react-icons/ai'\n\n// const Nav = styled.div`\n//     background: #15171c;\n//     height: 80px;\n//     display: flex;\n//     justify-content: flex-start;\n//     align-items: center;\n// `\n\nconst Navig = styled.div`\n  .navbar { background-color: #0C0A3E ;\n    position: fixed;\n    width: 100%;\n    z-index: 1; \n  }\n  a, .navbar-nav, .navbar-light .nav-link {\n    color: #fff;\n    &:hover { color: white; }\n  }\n  .navbar-brand {\n    font-size: 1.4em;\n    color: #fff;\n    &:hover { color: white; }\n  }\n  .form-center {\n    position: absolute !important;\n    left: 25%;\n    right: 25%;\n  }\n`;\n\n\nconst NavIcon = styled(Link)`\n    margin-left: 2rem;\n    font-size: 2rem;\n    height: 50px;\n    display:flex;\n    justify-content: flex-start;\n    align-items: center;\n`;\nconst SidebarNav = styled.nav`\nbackground:  #15171c;\n  width: 250px;\n  height: 100vh ;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  left: ${({ sidebar }) => (sidebar ? '0' : '-100%')};\n  transition: 350ms;\n  z-index: 10;\n`;\nconst SidebarWrap = styled.div`\n    width:100%;\n`;\n\n\nfunction SidebarMain(props) {\n    const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => setSidebar(!sidebar);\n    return (\n        <>\n        <Navig>\n            <Navbar>\n            <NavIcon style = {{textDecoration:\"none\", color: \"gold\"}} className =\"pr-5\" to='#'>\n                <i  class=\"fas fa-bars\" onClick={showSidebar} />\n            </NavIcon>\n            {props.isLoggedIn?(<Navbar.Brand  href=\"/\"> Team 2 University System</Navbar.Brand> ):(<Navbar.Brand  href=\"/login\"> Team 2 University System</Navbar.Brand>) }  \n            \n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Nav className=\"ml-auto\">\n                {props.isLoggedIn?(<Nav.Item><Nav.Link href=\"/profile\" style = {{textDecoration:\"underline\", whiteSpace:\"nowrap\"}}><i class=\"fas fa-user-circle pr-1\" ></i>{props.name}</Nav.Link></Nav.Item> ):(<Nav.Item className = \"border border-1 border-warning mr-2\" style={{borderRadius: 8}}><Nav.Link href=\"/login\">Login</Nav.Link></Nav.Item>) }\n                <Nav.Item><Nav.Link href=\"/about\">About</Nav.Link></Nav.Item>\n\n            </Nav>\n            \n            </Navbar>\n        </Navig>\n        <SidebarNav sidebar={sidebar} >\n            <SidebarWrap>\n            <NavIcon to='#'>\n                <AiIcons.AiOutlineClose style={{color:\"gold\",marginLeft:12, marginTop: 10}} onClick= {showSidebar}/>\n            </NavIcon>\n            {SidebarData.map((item, index) => {\n              return <SubMenu item={item} key={index} />;\n            })}\n            </SidebarWrap>\n        </SidebarNav>\n        </>\n    )\n}\n\nSidebarMain.propTypes = {\n    isLoggedIn: PropTypes.bool,\n    name: PropTypes.string\n  }\n  \n  SidebarMain.defaultProps = {\n    isLoggedIn: true,\n    name: \"Hassan Soubra\",\n  };\n  \nexport default SidebarMain\n","/Users/mayarmoawad/Documents/GitHub/Team-2/client/src/components/pages/DiabPages/HODViewStaff.js",["86","87","88","89","90","91","92","93","94","95"],"import React, {useState, useEffect} from 'react';\nimport {Container, Button,Card , Col, Row, Dropdown,ButtonGroup, DropdownButton} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport useToken from '../general/useToken';\nimport axios from 'axios'\n\n\nconst StaffCard = styled.div`\n  .staffCard{\n    width: 100%;\n    box-shadow: 10px 5px;\n  }\n`;\n\nconst custDropDown = styled.div`\n  .dropdown-link a{\n    background: red; color: yellow; !important;\n  }\n`\n//<DropdownButton  variant=\"primary\" onSelect={handleSelect} className=\"dropdown-link\" title={(value1===\"\")?\"Select Course\":value1} style={style2}>\n       \nfunction HODViewStaff(props) {\n    let style1 = {\n        background:\"linear-gradient(purple, transparent),linear-gradient(to top left, #2C2A8A, transparent),linear-gradient(to top right, #F9564F, transparent)\",\n        backgroundColor:\"#0C0A4A\" ,\n        color: \"white\" ,\n        borderRadius: 10, \n        boxShadow: \"5px 10px 5px #9E9E9E\",\n        minWidth:750,\n    };\n    \n    const [staffList,setStaffList]= useState([]);\n    \n    const token = useToken().token\n    useEffect(()=>{\n    axios.get('http://localhost:5000/api/hod/staff',{headers:{'auth-token':token}}).then((res)=>{\n        setStaffList(res.data)\n    }).catch(err=>alert(err))\n    }, []  )\n\n   \n    return (\n        \n        <Container fluid >\n        \n        {(props.course==='')?\n        (\n          //if this is not coming from /course-staff then it's just a view all staff\n          <h1 style = {{whiteSpace: 'nowrap'}}>Staff members in your department: </h1>\n        ):(\n          //but if the course is not empty, then it came from a /course-staff\n          <h1 style = {{whiteSpace: 'nowrap'}}>Staff members assigned to {props.course}:</h1>\n        )}\n        \n        {staffList.map(staffMem => {\n            return (\n            <StaffCard style ={{paddingTop:20 }} >\n                <Card style={style1} >\n                <table style={{width: \"100%\"}}>\n                <colgroup>\n                    <col span=\"1\" style={{width: \"10%\"}}/>\n                    <col span=\"1\" style={{width: \"90%\"}}/>\n                </colgroup>\n                <tbody>\n                    <tr>\n                    <td >\n                    {staffMem.imgLink?\n                      ( \n                        <img style={{borderRadius:10}} width=\"250\" height=\"250\" src={staffMem.imgLink} />\n                      ):\n                      (\n                        <img style={{borderRadius:10}} width=\"250\" height=\"250\" src='https://t4.ftcdn.net/jpg/03/46/93/61/360_F_346936114_RaxE6OQogebgAWTalE1myseY1Hbb5qPM.jpg' /> // This is the default icon\n                      )\n                    }\n                    </td>\n                    <td >\n                    <Card.Body >\n                        <Card.Title style ={{fontSize: 30, textDecoration:\"underline\", textDecorationColor: \"#B33F62\"}}>{staffMem.name}</Card.Title>\n                        <Card.Text>\n                        Type: {staffMem.subType}\n                        </Card.Text>\n                        <Card.Text>\n                        id: {staffMem.userCode}\n                        </Card.Text>\n                        <Card.Text>\n                        Email: {staffMem.email}\n                        </Card.Text>\n                        </Card.Body>\n                    </td>\n                    </tr>\n                    </tbody>\n                </table>\n                \n                </Card>\n            </StaffCard>\n            )\n        }\n        )}\n        </Container>\n    )\n}\nHODViewStaff.propTypes = {\n    staff: PropTypes.array,\n    course: PropTypes.string,\n    courses: PropTypes.array\n  }\n  \n  HODViewStaff.defaultProps = {\n    course: \"\"\n  };\n  \nexport default HODViewStaff\n",{"ruleId":"96","severity":1,"message":"97","line":1,"column":25,"nodeType":"98","messageId":"99","endLine":1,"endColumn":33},{"ruleId":"96","severity":1,"message":"100","line":6,"column":8,"nodeType":"98","messageId":"99","endLine":6,"endColumn":12},{"ruleId":"96","severity":1,"message":"101","line":2,"column":9,"nodeType":"98","messageId":"99","endLine":2,"endColumn":12},{"ruleId":"96","severity":1,"message":"102","line":2,"column":14,"nodeType":"98","messageId":"99","endLine":2,"endColumn":17},{"ruleId":"96","severity":1,"message":"103","line":2,"column":19,"nodeType":"98","messageId":"99","endLine":2,"endColumn":28},{"ruleId":"96","severity":1,"message":"104","line":2,"column":30,"nodeType":"98","messageId":"99","endLine":2,"endColumn":36},{"ruleId":"96","severity":1,"message":"105","line":2,"column":39,"nodeType":"98","messageId":"99","endLine":2,"endColumn":43},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"96","severity":1,"message":"104","line":2,"column":20,"nodeType":"98","messageId":"99","endLine":2,"endColumn":26},{"ruleId":"96","severity":1,"message":"105","line":2,"column":27,"nodeType":"98","messageId":"99","endLine":2,"endColumn":31},{"ruleId":"96","severity":1,"message":"102","line":2,"column":34,"nodeType":"98","messageId":"99","endLine":2,"endColumn":37},{"ruleId":"96","severity":1,"message":"101","line":2,"column":39,"nodeType":"98","messageId":"99","endLine":2,"endColumn":42},{"ruleId":"96","severity":1,"message":"110","line":2,"column":71,"nodeType":"98","messageId":"99","endLine":2,"endColumn":85},{"ruleId":"96","severity":1,"message":"111","line":5,"column":7,"nodeType":"98","messageId":"99","endLine":5,"endColumn":16},{"ruleId":"96","severity":1,"message":"112","line":16,"column":9,"nodeType":"98","messageId":"99","endLine":16,"endColumn":22},{"ruleId":"96","severity":1,"message":"103","line":2,"column":9,"nodeType":"98","messageId":"99","endLine":2,"endColumn":18},{"ruleId":"96","severity":1,"message":"113","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":17},{"ruleId":"114","severity":1,"message":"115","line":25,"column":15,"nodeType":"116","endLine":47,"endColumn":10},{"ruleId":"117","severity":1,"message":"118","line":30,"column":33,"nodeType":"116","messageId":"119","endLine":30,"endColumn":35},{"ruleId":"117","severity":1,"message":"118","line":38,"column":35,"nodeType":"116","messageId":"119","endLine":38,"endColumn":37},{"ruleId":"120","severity":1,"message":"121","line":40,"column":33,"nodeType":"122","messageId":"123","endLine":40,"endColumn":35},{"ruleId":"120","severity":1,"message":"121","line":40,"column":75,"nodeType":"122","messageId":"123","endLine":40,"endColumn":77},{"ruleId":"114","severity":1,"message":"124","line":47,"column":12,"nodeType":"125","endLine":47,"endColumn":14,"suggestions":"126"},{"ruleId":"96","severity":1,"message":"127","line":2,"column":20,"nodeType":"98","messageId":"99","endLine":2,"endColumn":24},{"ruleId":"96","severity":1,"message":"128","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":14},{"ruleId":"96","severity":1,"message":"129","line":13,"column":7,"nodeType":"98","messageId":"99","endLine":13,"endColumn":14},{"ruleId":"96","severity":1,"message":"130","line":31,"column":8,"nodeType":"98","messageId":"99","endLine":31,"endColumn":16},{"ruleId":"96","severity":1,"message":"131","line":32,"column":7,"nodeType":"98","messageId":"99","endLine":32,"endColumn":19},{"ruleId":"96","severity":1,"message":"127","line":2,"column":20,"nodeType":"98","messageId":"99","endLine":2,"endColumn":24},{"ruleId":"96","severity":1,"message":"132","line":29,"column":18,"nodeType":"98","messageId":"99","endLine":29,"endColumn":27},{"ruleId":"114","severity":1,"message":"115","line":30,"column":13,"nodeType":"116","endLine":36,"endColumn":6},{"ruleId":"117","severity":1,"message":"118","line":33,"column":31,"nodeType":"116","messageId":"119","endLine":33,"endColumn":33},{"ruleId":"114","severity":1,"message":"124","line":36,"column":8,"nodeType":"125","endLine":36,"endColumn":10,"suggestions":"133"},{"ruleId":"96","severity":1,"message":"134","line":10,"column":13,"nodeType":"98","messageId":"99","endLine":10,"endColumn":20},{"ruleId":"96","severity":1,"message":"104","line":2,"column":20,"nodeType":"98","messageId":"99","endLine":2,"endColumn":26},{"ruleId":"96","severity":1,"message":"102","line":2,"column":34,"nodeType":"98","messageId":"99","endLine":2,"endColumn":37},{"ruleId":"96","severity":1,"message":"101","line":2,"column":39,"nodeType":"98","messageId":"99","endLine":2,"endColumn":42},{"ruleId":"96","severity":1,"message":"135","line":2,"column":44,"nodeType":"98","messageId":"99","endLine":2,"endColumn":52},{"ruleId":"96","severity":1,"message":"136","line":2,"column":53,"nodeType":"98","messageId":"99","endLine":2,"endColumn":64},{"ruleId":"96","severity":1,"message":"110","line":2,"column":66,"nodeType":"98","messageId":"99","endLine":2,"endColumn":80},{"ruleId":"96","severity":1,"message":"137","line":16,"column":7,"nodeType":"98","messageId":"99","endLine":16,"endColumn":19},{"ruleId":"114","severity":1,"message":"124","line":40,"column":8,"nodeType":"125","endLine":40,"endColumn":10,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":70,"column":25,"nodeType":"141","endLine":70,"endColumn":106},{"ruleId":"139","severity":1,"message":"140","line":73,"column":25,"nodeType":"141","endLine":73,"endColumn":179},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","no-native-reassign",["142"],"no-negated-in-lhs",["143"],"'DropdownButton' is defined but never used.","'StaffCard' is assigned a value but never used.","'handleSelect1' is assigned a value but never used.","'PropTypes' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["144"],"'Form' is defined but never used.","'Select' is defined but never used.","'options' is assigned a value but never used.","'rendered' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'setValue1' is assigned a value but never used.",["145"],"'FAIcons' is defined but never used.","'Dropdown' is defined but never used.","'ButtonGroup' is defined but never used.","'custDropDown' is assigned a value but never used.",["146"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"147","fix":"149"},{"desc":"147","fix":"150"},"Update the dependencies array to be: [token]",{"range":"151","text":"152"},{"range":"153","text":"152"},{"range":"154","text":"152"},[1812,1814],"[token]",[1232,1234],[1314,1316]]
